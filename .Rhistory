text(x = -2.9, y = -1.5, "19", cex = 1.2, col = 'white')
text(x = -2.9, y = -1.5, "19", cex = 1, col = 'black')
int_programming$trace
arrows(x0 = -1.5, y0 = -1.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = -1.5, y0 = -1.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
par(mfcol = c(1,2))
plot(int_programming)
plot(int_programming, type = "contour", lower = c(-5, -5), upper = c(5, 5))
par(mar=c(3.5, 3.5, 1, 1) +0.1, new = TRUE)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'white', lwd = 4)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'black', lwd = 2)
text(x = 1.1, y = -0.5, "10", cex = 1.2, col = 'white')
text(x = 1.1, y = -0.5, "10", cex = 1, col = 'black')
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
text(x = 0.1, y = -2.5, "19", cex = 1.2, col = 'white')
text(x = 0.1, y = -2.5, "19", cex = 1, col = 'black')
postscript('Fig/fig2-ex2-plot.eps', w = 14 * own.cex, h = 7 * own.cex, paper = "special", horizontal = FALSE)
par(mfcol = c(1,2))
plot(int_programming)
plot(int_programming, type = "contour", lower = c(-5, -5), upper = c(5, 5))
par(mar=c(3.5, 3.5, 1, 1) +0.1, new = TRUE)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'white', lwd = 4)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'black', lwd = 2)
text(x = 1.1, y = -0.5, "10", cex = 1.2, col = 'white')
text(x = 1.1, y = -0.5, "10", cex = 1, col = 'black')
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
text(x = 0.1, y = -2.5, "19", cex = 1.2, col = 'white')
text(x = 0.1, y = -2.5, "19", cex = 1, col = 'black')
dev.off()
int_programming
postscript('Fig/fig2-ex2-plot.eps', w = 14 * own.cex, h = 7 * own.cex, paper = "special", horizontal = FALSE)
par(mfcol = c(1,2))
plot(int_programming)
plot(int_programming, type = "contour", lower = c(-5, -5), upper = c(5, 5))
par(mar=c(3.5, 3.5, 1, 1) +0.1, new = TRUE)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'white', lwd = 4)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'black', lwd = 2)
text(x = 1.1, y = -0.5, "10", cex = 1.2, col = 'white')
text(x = 1.1, y = -0.5, "10", cex = 1, col = 'black')
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
text(x = 0.1, y = -2.5, "19", cex = 1.2, col = 'white', adj = 1)
text(x = 0.1, y = -2.5, "19", cex = 1, col = 'black')
dev.off()
postscript('Fig/fig2-ex2-plot.eps', w = 14 * own.cex, h = 7 * own.cex, paper = "special", horizontal = FALSE)
par(mfcol = c(1,2))
plot(int_programming)
plot(int_programming, type = "contour", lower = c(-5, -5), upper = c(5, 5))
par(mar=c(3.5, 3.5, 1, 1) +0.1, new = TRUE)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'white', lwd = 4)
arrows(x0 = 1.5, y0 = -0.5, x1 = 3, y1  = 0, col = 'black', lwd = 2)
# text(x = 1.1, y = -0.5, "10", cex = 1.2, col = 'white')
text(x = 1.1, y = -0.5, "10", cex = 1, col = 'black')
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'white', lwd = 4)
arrows(x0 = 0.5, y0 = -2.5, x1 = 2, y1  = -3, col = 'black', lwd = 2)
# text(x = 0.1, y = -2.5, "19", cex = 1.2, col = 'white', adj = 1)
text(x = 0.1, y = -2.5, "19", cex = 1, col = 'black')
dev.off()
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
var_func_int
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
int_programming <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)
int_programming$par
N <- 10000
boot_int_programming <- rep(NA, N)
optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)$function_value
for (i in c(1 : N)) {
boot_int_programming[i] <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)$function_value
}
boot_int_programming
hist(boot_int_programming)
summary(factor(int_programming))
factor(int_programming)
factor(boot_int_programming)
summary(factor(boot_int_programming))
for (i in c(1 : N)) {
try(boot_int_programming[i] <- optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 50,
r = 0.85,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE,
vf = var_func_int
)
)$function_value)
}
hist(boot_int_programming)
summary(factor(boot_int_programming))
rm(list = ls())
library(GenSA)
library(optimization)
library(xtable)
library(microbenchmark)
setwd('/home/khusman1/Documents/Veroeffentlichungen/optimization_essay/')
etpt <- function (x) {
D <- length (x)
y <- x + 20
t <- rep(NA, D)
t[y < 0]           <- -160 + y[y < 0]^2
t[y >=0 & y < 15] <- (160 / 15) * (y[y >=0 & y < 15] - 15)
t[y >=15 & y <= 20] <- (200 / 5) * ( 15 - y[y >=15 & y <= 20])
t[y > 20] <- -200 + (y[y > 20]^2)
return(sum(t) + 200 * D)
}
tt <- optim_sa(fun = etpt,
start = (c(25, -25)),
trace = TRUE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
plot(tt, type = 'contour')
tt$function_value
tt$par
tt
tt <- optim_sa(fun = etpt,
start = (c(25, -25)),
trace = TRUE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
plot(tt, type = 'contour')
tt$function_value
tt$par
tt
optim(par = rep(50, 2), fn = etpt, method = "SANN")
microbenchmark(
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = TRUE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
), times = 50)
m.1 <- microbenchmark(
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = TRUE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
), times = 10)
m.1 <- microbenchmark(
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
), times = 10)
m.1 <- microbenchmark(
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
), times = 10)
m.2 <- microbenchmark(optim(par = rep(50, 2), fn = etpt, method = "SANN"), times = 10)
m.1
m.2
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
optim(par = rep(50, 2), fn = etpt, method = "SANN")
m.1 <- microbenchmark(
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
), times = 10)
m.1
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 500,
r = 0.9,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.95,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.95,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.95,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.01,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.01,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.01,
dyn_rf = TRUE
)
)
optim_sa(fun = etpt,
start = (c(25, -25)),
trace = FALSE,
lower = c(-50, -50),
upper=c(50, 50),
control = list(t0 = 100,
t_min = 0.1,
nlimit = 100,
r = 0.99,
rf = 3,
ac_acc = 0.01,
dyn_rf = TRUE
)
)

trace.4[i, ] <- unlist(optim(par = c(-10, -10), fn = hi, method = "Nelder-Mead")[c("value", "par")])
}
table((apply(trace.4[c(2,3)], 1, paste, collapse = "/")))
?optim
?optim_sa
?optim
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, maxit = 3900, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
?GenSA
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(maxit = 3900, temperature = 500))[c("value", "par")])
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(maxit = 3900, temperature = 500))[c("value", "par")])
}
trace.3 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(maxit = 3900, temperature = 500, nb.stop.improvement = 30))[c("value", "par")])
}
table((apply(trace.3[c(2,3)], 1, paste, collapse = "/")))
unlist(optim(par = c(-10, -10), fn = hi, method = "Nelder-Mead")[c("value", "par")])
table((apply(trace.4[c(2,3)], 1, paste, collapse = "/")))
trace.4
mean(trace.1$fun)
fun
trace.1
trace.2
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 100,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 150,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 550,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 250,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 200,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 150,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 100,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 100,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 150,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
#-------------------------------------------------#
#### Example Himmelblau, cont. parameter space ####
#-------------------------------------------------#
library(GanSA)
library(optimization)
library(ggplot2)
# Himmelblau's function
# 4 minima at
# f(3, 2) = 0
# f(-2.804, -3.131) = 0
# f(-3.779, -3.283) = 0
# f( 3.584, -1.848) = 0
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
## Find good parameters ##
nloop <- 100
trace.1 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.1[i, ] <- unlist(optim_sa(fun = hi,
start = (c(10, 10)),
trace = TRUE,
lower = c(-40, -40),
upper=c(40, 40),
control = list(t0 = 500,
nlimit = 150,
r = 0.8,
rf = 3,
ac_acc = 0.1,
dyn_rf = TRUE
)
)[c("function_value", "par")])
}
mean(trace.1$fun)
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, maxit = 3900, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, maxit = 3900, reltol = 0.1, temp = 100, trace = TRUE))
3900/2)()*3
(3900/2)*3
trace.2 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, maxit = 5850, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
trace.2 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 150, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 150, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 150, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 500, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 50, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 60, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 50, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 100, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 80, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 70, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
for(i in c(1 : nloop)) {
trace.2[i, ] <- unlist(optim(par = c(10, 10), fn = hi, method = "SANN", control = list(tmax = 500, reltol = 0.1, temp = 50, trace = TRUE))[c("value", "par")])
}
mean(trace.2$fun)
trace.3 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(maxit = 5850, temperature = 500, nb.stop.improvement = 30))[c("value", "par")])
}
mean(trace.3$fun)
mean(trace.3$fun)
trace.3 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(temperature = 500, nb.stop.improvement = 30, maxit = 4000))[c("value", "par")])
}
mean(trace.3$fun)
table((apply(trace.3[c(2,3)], 1, paste, collapse = "/")))
trace.4 <- data.frame(fun = rep(NA, nloop), x1 = rep(NA, nloop), x2 = rep(NA, nloop))
for(i in c(1 : nloop)) {
trace.4[i, ] <- unlist(optim(par = c(-10, -10), fn = hi, method = "Nelder-Mead")[c("value", "par")])
}
mean(trace.4$fun)
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(temperature = 50, nb.stop.improvement = 30, maxit = 4000))[c("value", "par")])
}
mean(trace.3$fun)
for(i in c(1 : nloop)) {
trace.3[i, ]  <- unlist(GenSA::GenSA(par = c(10, 10), fn = hi, lower = c(-40, -40), upper = c(40, 40), control = list(temperature = 500, nb.stop.improvement = 30, maxit = 4000))[c("value", "par")])
}
mean(trace.3$fun)
table((apply(trace.3[c(2,3)], 1, paste, collapse = "/")))
#----------------------------------------------------#
#### Example 1: Himmelblau, cont. parameter space ####
#----------------------------------------------------#
## Clear workspace ##
rm(list = ls())
## Load packages ##
library(GenSA)
library(optimization)
library(xtable)
library(microbenchmark)
## setwd ##
setwd('/home/khusman1/Documents/Veroeffentlichungen/optimization_essay/')
hi <- function(x){
(x[1]**2 + x[2] - 11)**2 + (x[1] + x[2]**2 -7)**2
}
nloop <- 10000 # Caution: Time intensive
load("~/Documents/Veroeffentlichungen/optimization_essay/RFiles/Ex1_speed.RData")
par(mar = c(6, 6, 2, 2) + 0.1)
boxplot(cbind(mb.4$time, mb.1$time, mb.2$time, mb.3$time), ylim = c(0, 4e7), axes = FALSE)
axis(1, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 4, "Calculation time [millisecond]", cex = cex.plot.tex)
mtext(side = 1, line = 2.5, at = c(1 : 4), c("optim (NM)", "optim\\_sa", "optim (SA)", "GenSA"), cex = cex.plot.tex)
axis(2, las = 2, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 1.5, c(0 : 4), cex = cex.plot.tex, at = seq(0, 4e7, 1e7), las = 2)
box()
dev.off()
cex.plot.tex <- 1.6
par(mar = c(6, 6, 2, 2) + 0.1)
boxplot(cbind(mb.4$time, mb.1$time, mb.2$time, mb.3$time), ylim = c(0, 4e7), axes = FALSE)
axis(1, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 4, "Calculation time [millisecond]", cex = cex.plot.tex)
mtext(side = 1, line = 2.5, at = c(1 : 4), c("optim (NM)", "optim\\_sa", "optim (SA)", "GenSA"), cex = cex.plot.tex)
axis(2, las = 2, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 1.5, c(0 : 4), cex = cex.plot.tex, at = seq(0, 4e7, 1e7), las = 2)
cex.plot.tex <- 1.7
tikzDevice::tikz('Fig/fig1_ex1-time.tex', h = 7, w = 7)
par(mar = c(6, 6, 2, 2) + 0.1)
boxplot(cbind(mb.4$time, mb.1$time, mb.2$time, mb.3$time), ylim = c(0, 4e7), axes = FALSE)
axis(1, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 4, "Calculation time [millisecond]", cex = cex.plot.tex)
mtext(side = 1, line = 2.5, at = c(1 : 4), c("optim (NM)", "optim\\_sa", "optim (SA)", "GenSA"), cex = cex.plot.tex)
axis(2, las = 2, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 1.5, c(0 : 4), cex = cex.plot.tex, at = seq(0, 4e7, 1e7), las = 2)
box()
dev.off()
cex.plot.tex <- 1.8
tikzDevice::tikz('Fig/fig1_ex1-time.tex', h = 7, w = 7)
par(mar = c(6, 6, 2, 2) + 0.1)
boxplot(cbind(mb.4$time, mb.1$time, mb.2$time, mb.3$time), ylim = c(0, 4e7), axes = FALSE)
axis(1, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 4, "Calculation time [millisecond]", cex = cex.plot.tex)
mtext(side = 1, line = 2.5, at = c(1 : 4), c("optim (NM)", "optim\\_sa", "optim (SA)", "GenSA"), cex = cex.plot.tex)
axis(2, las = 2, labels = FALSE, lwd = 0, lwd.ticks = 1)
mtext(side = 2, line = 1.5, c(0 : 4), cex = cex.plot.tex, at = seq(0, 4e7, 1e7), las = 2)
box()
dev.off()
